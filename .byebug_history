exit
@cells
      end@cells
        @cells[indices[0]] == @cells[indices[1]] && @cells[indices[1]] == @cells[indices[2]]
 has_won = self.class.winning_combinations.find do |indices| 
      return 'O' @cells[has_won[0]] == 'O'
      return 'X' if  @cells[has_won[0]] == 'X'
      return 'Draw' if has_won == nil
      end
        @cells[indices[0]] == @cells[indices[1]] && @cells[indices[1]] == @cells[indices[2]]
 has_won = self.class.winning_combinations.find do |indices| 
 @cells[has_won[0]] == 'X'
has_won
has_won = self.class.winning_combinations.find do |indices|  @cells[indices[0]] == @cells[indices[1]] && @cells[indices[1]] == @cells[indices[2]] end
      end
        @cells[indices[0]] == @cells[indices[1]] && @cells[indices[1]] == @cells[indices[2]]
has_won = self.class.winning_combinations.find do |indices| 
completed?
@cells = ["X", "O", "X", "O", "O", "X", "X", "X", "O"]
has_won
@cells
game.cells
exit
game.result.has_won
game.cells
exit
@cells[has_won[0]] == 'X'
exit
        if  @cells[has_won[0]] == 'X'
@cells[has_won[0]]
has_won[0] == @cells[0]
has_won[0]
has_won
completed?
exit
@cells
completed?
exit
game.result
game.completed?
game.cells
@cells
exit
completed?
exit
@cells
completed?
exit
@cells
exit
game.result
game.completed?
exit
game.result
game.completed?
game.play(4)
game.result
game.completed?
exit
@cells
exit
@cells
game.result
gaem.result
game.completed?
game.play(4)
game.result
game.completed?
expect(game.completed?).to eq false
@cells
exit
expect(game.completed?).to eq false
@cells
exit
@cells
c
game.play(0)
exit
indices
exit
indices
indices[0]
cells
cells[indices[0]]
c
indices
exit
winning_combinations
arr
exit
c
exit
arr
arr[5]
expect(TicTacToe.is_winning_position?(arr)).to eq true
winning_combinations.include?(arr.sort)
exit
winning_combinations.include?(array)
winning_combinations.include(array)
array
winning_combinations
exit
